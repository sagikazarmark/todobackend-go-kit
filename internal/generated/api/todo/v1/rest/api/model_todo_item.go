/*
 * Todo API
 *
 * The Todo API manages a list of todo items as described by the TodoMVC backend project: http://todobackend.com 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type TodoItem struct {

	Id string `json:"id"`

	Title string `json:"title"`

	Completed bool `json:"completed"`

	Order int32 `json:"order"`

	Url string `json:"url"`
}

// AssertTodoItemRequired checks if the required fields are not zero-ed
func AssertTodoItemRequired(obj TodoItem) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"title": obj.Title,
		"completed": obj.Completed,
		"order": obj.Order,
		"url": obj.Url,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTodoItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of TodoItem (e.g. [][]TodoItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTodoItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTodoItem, ok := obj.(TodoItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTodoItemRequired(aTodoItem)
	})
}
