name: Artifacts

on:
  workflow_call:
    inputs:
      publish:
        description: Publish artifacts to the artifact store
        default: false
        required: false
        type: boolean
    outputs:
      container-image-name:
        description: Container image name
        value: ${{ jobs.container-image.outputs.name }}
      container-image-digest:
        description: Container image digest
        value: ${{ jobs.container-image.outputs.digest }}
      container-image-ref:
        description: Container image ref
        value: ${{ jobs.container-image.outputs.ref }}

# permissions: read-all

jobs:
  container-image:
    name: Container image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      id-token: write
      security-events: write

    outputs:
      name: ghcr.io/${{ github.repository }}
      digest: ${{ steps.build.outputs.digest }}
      ref: ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0

      - name: Set up Cosign
        uses: sigstore/cosign-installer@v3.0.2
        with:
          cosign-release: v2.0.1
        if: inputs.publish

      - name: Set up Syft
        uses: anchore/sbom-action/download-syft@v0.14.1
        with:
          syft-version: v0.76.1

      - name: Gather build metadata
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest = false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
        if: inputs.publish

      - name: Build and push image
        id: build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=oci,dest=/tmp/image.tar
          push: ${{ inputs.publish }}

      - name: Sign image
        run: |
          cosign sign --yes --recursive "ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}"
          echo "::notice title=Verify signature::cosign verify --certificate-identity 'https://github.com/${{ github.workflow_ref }}' --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}"
          echo "::notice title=Verify signature(pretty print)::cosign verify --certificate-identity 'https://github.com/${{ github.workflow_ref }}' --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }} | jq '.[0]'"
        if: inputs.publish

      - name: Generate SBOM
        run: syft -o spdx-json=sbom-spdx.json "ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}"

      - name: Attach SBOM attestation
        run: |
          cosign attest --yes --predicate sbom-spdx.json --type spdx "ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}"
          echo "::notice title=Verify SBOM attestation::cosign verify-attestation --certificate-identity 'https://github.com/${{ github.workflow_ref }}' --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' --type spdx ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }}"
          echo "::notice title=Inspect SBOM::cosign verify-attestation --certificate-identity 'https://github.com/${{ github.workflow_ref }}' --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' --type spdx ghcr.io/${{ github.repository }}@${{ steps.build.outputs.digest }} | jq '.payload |= @base64d | .payload | fromjson | select(.predicateType == \"https://spdx.dev/Document\") | .predicate | fromjson'"
        if: inputs.publish

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: SBOM
          path: sbom-spdx.json
          retention-days: 5

      - name: Extract OCI tarball
        run: |
          mkdir -p /tmp/image
          tar -xzf /tmp/image.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@1f0aa582c8c8f5f7639610d6d38baddfea4fdcee # 0.9.2
        with:
          input: /tmp/image
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: Trivy scan results
          path: trivy-results.sarif
          retention-days: 5

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@d186a2a36cc67bfa1b860e6170d37fb9634742c7 # v2.2.11
        with:
          sarif_file: trivy-results.sarif
