name: Artifacts

on:
  push:
    branches: [main]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  pull_request:

jobs:
  container-images:
    name: Container images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Gather metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ github.repository }}
          flavor: |
            latest = false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
        if: github.event_name == 'push'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name == 'push'

      - name: Build and push
        id: build
        uses: docker/build-push-action@v4
        env:
          DOCKER_CONTENT_TRUST: 1
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign
        run: cosign sign --recursive "ghcr.io/${{ github.repository }}:${{ steps.build.outputs.digest }}"
        if: github.event_name == 'push'

      - name: Attach SBOM attestation
        run: |
          syft -o spdx-json=sbom-spdx.json "ghcr.io/${{ github.repository }}:${{ steps.build.outputs.digest }}"
          cosign attest --predicate sbom-spdx.json --type spdx "ghcr.io/${{ github.repository }}:${{ steps.build.outputs.digest }}"
        if: github.event_name == 'push'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: "ghcr.io/${{ github.repository }}:${{ steps.build.outputs.digest }}"
          format: "sarif"
          output: "trivy-results.sarif"
        if: github.event_name == 'push'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
        if: github.event_name == 'push'
