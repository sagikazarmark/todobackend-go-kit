config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

go_mod_download(
    name = "emperror.dev__errors",
    _tag = "download",
    module = "emperror.dev/errors",
    version = "v0.8.0",
)

go_module(
    name = "emperror.dev__errors",
    download = ":_emperror.dev__errors#download",
    install = ["."],
    module = "emperror.dev/errors",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":go.uber.org__multierr",
    ],
)

go_mod_download(
    name = "github.com__99designs__gqlgen",
    _tag = "download",
    module = "github.com/99designs/gqlgen",
    version = "v0.13.0",
)

go_module(
    name = "github.com__99designs__gqlgen__complexity",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["complexity"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__vektah__gqlparser__v2__ast",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__errcode",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/errcode"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [":github.com__vektah__gqlparser__v2__gqlerror"],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__executor",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/executor"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__99designs__gqlgen__graphql__errcode",
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
        ":github.com__vektah__gqlparser__v2__parser",
        ":github.com__vektah__gqlparser__v2__validator",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__handler",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/handler"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__99designs__gqlgen__graphql__executor",
        ":github.com__99designs__gqlgen__graphql__handler__extension",
        ":github.com__99designs__gqlgen__graphql__handler__lru",
        ":github.com__99designs__gqlgen__graphql__handler__transport",
        ":github.com__vektah__gqlparser__v2__gqlerror",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__handler__extension",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/handler/extension"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__complexity",
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__99designs__gqlgen__graphql__errcode",
        ":github.com__mitchellh__mapstructure",
        ":github.com__vektah__gqlparser__v2__gqlerror",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__handler__lru",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/handler/lru"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__hashicorp__golang-lru",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__handler__transport",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/handler/transport"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__99designs__gqlgen__graphql",
        ":github.com__99designs__gqlgen__graphql__errcode",
        ":github.com__gorilla__websocket",
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
    ],
)

go_module(
    name = "github.com__99designs__gqlgen__graphql__introspection",
    download = ":_github.com__99designs__gqlgen#download",
    install = ["graphql/introspection"],
    module = "github.com/99designs/gqlgen",
    visibility = ["PUBLIC"],
    deps = [":github.com__vektah__gqlparser__v2__ast"],
)

go_mod_download(
    name = "github.com__agnivade__levenshtein",
    _tag = "download",
    module = "github.com/agnivade/levenshtein",
    version = "v1.0.3",
)

go_module(
    name = "github.com__agnivade__levenshtein",
    download = ":_github.com__agnivade__levenshtein#download",
    install = ["."],
    module = "github.com/agnivade/levenshtein",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__cucumber__gherkin-go__v13",
    _tag = "download",
    module = "github.com/cucumber/gherkin-go/v13",
    version = "v13.0.0",
)

go_module(
    name = "github.com__cucumber__gherkin-go__v13",
    download = ":_github.com__cucumber__gherkin-go__v13#download",
    install = ["."],
    module = "github.com/cucumber/gherkin-go/v13",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__cucumber__messages-go__v12",
        ":github.com__gogo__protobuf__io",
    ],
)

go_mod_download(
    name = "github.com__cucumber__messages-go__v12",
    _tag = "download",
    module = "github.com/cucumber/messages-go/v12",
    version = "v12.0.0",
)

go_module(
    name = "github.com__cucumber__messages-go__v12",
    download = ":_github.com__cucumber__messages-go__v12#download",
    install = ["."],
    module = "github.com/cucumber/messages-go/v12",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gofrs__uuid",
        ":github.com__gogo__protobuf__proto",
    ],
)

go_mod_download(
    name = "github.com__davecgh__go-spew",
    _tag = "download",
    module = "github.com/davecgh/go-spew",
    version = "v1.1.1",
)

go_module(
    name = "github.com__davecgh__go-spew__spew",
    download = ":_github.com__davecgh__go-spew#download",
    install = ["spew"],
    module = "github.com/davecgh/go-spew",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__felixge__httpsnoop",
    _tag = "download",
    module = "github.com/felixge/httpsnoop",
    version = "v1.0.1",
)

go_module(
    name = "github.com__felixge__httpsnoop",
    download = ":_github.com__felixge__httpsnoop#download",
    install = ["."],
    module = "github.com/felixge/httpsnoop",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__go-bdd__gobdd",
    _tag = "download",
    module = "github.com/go-bdd/gobdd",
    version = "v1.1.2",
)

go_module(
    name = "github.com__go-bdd__gobdd",
    download = ":_github.com__go-bdd__gobdd#download",
    install = ["."],
    module = "github.com/go-bdd/gobdd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__cucumber__gherkin-go__v13",
        ":github.com__cucumber__messages-go__v12",
    ],
)

go_mod_download(
    name = "github.com__go-kit__kit",
    _tag = "download",
    module = "github.com/go-kit/kit",
    version = "v0.10.0",
)

go_module(
    name = "github.com__go-kit__kit__endpoint",
    download = ":_github.com__go-kit__kit#download",
    install = ["endpoint"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-kit__kit__log",
    download = ":_github.com__go-kit__kit#download",
    install = ["log"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-logfmt__logfmt"],
)

go_module(
    name = "github.com__go-kit__kit__transport",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-kit__kit__log"],
)

go_module(
    name = "github.com__go-kit__kit__transport__grpc",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport/grpc"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
        ":github.com__go-kit__kit__transport",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__metadata",
    ],
)

go_module(
    name = "github.com__go-kit__kit__transport__http",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport/http"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
        ":github.com__go-kit__kit__transport",
    ],
)

go_mod_download(
    name = "github.com__go-logfmt__logfmt",
    _tag = "download",
    module = "github.com/go-logfmt/logfmt",
    version = "v0.5.0",
)

go_module(
    name = "github.com__go-logfmt__logfmt",
    download = ":_github.com__go-logfmt__logfmt#download",
    install = ["."],
    module = "github.com/go-logfmt/logfmt",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gofrs__uuid",
    _tag = "download",
    module = "github.com/gofrs/uuid",
    version = "v3.2.0+incompatible",
)

go_module(
    name = "github.com__gofrs__uuid",
    download = ":_github.com__gofrs__uuid#download",
    install = ["."],
    module = "github.com/gofrs/uuid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gogo__protobuf",
    _tag = "download",
    module = "github.com/gogo/protobuf",
    version = "v1.3.1",
)

go_module(
    name = "github.com__gogo__protobuf__io",
    download = ":_github.com__gogo__protobuf#download",
    install = ["io"],
    module = "github.com/gogo/protobuf",
    visibility = ["PUBLIC"],
    deps = [":github.com__gogo__protobuf__proto"],
)

go_module(
    name = "github.com__gogo__protobuf__proto",
    download = ":_github.com__gogo__protobuf#download",
    install = ["proto"],
    module = "github.com/gogo/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__protobuf",
    _tag = "download",
    module = "github.com/golang/protobuf",
    version = "v1.4.3",
)

go_module(
    name = "github.com__golang__protobuf__proto",
    download = ":_github.com__golang__protobuf#download",
    install = ["proto"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__any",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/any"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__duration",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/duration"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__timestamp",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/timestamp"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__wrappers",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/wrappers"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__wrapperspb",
    ],
)

go_mod_download(
    name = "github.com__goph__idgen",
    _tag = "download",
    module = "github.com/goph/idgen",
    version = "v0.4.0",
)

go_module(
    name = "github.com__goph__idgen__ulidgen",
    download = ":_github.com__goph__idgen#download",
    install = ["ulidgen"],
    module = "github.com/goph/idgen",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__oklog__ulid",
        ":github.com__pkg__errors",
    ],
)

go_mod_download(
    name = "github.com__gorilla__handlers",
    _tag = "download",
    module = "github.com/gorilla/handlers",
    version = "v1.5.1",
)

go_module(
    name = "github.com__gorilla__handlers",
    download = ":_github.com__gorilla__handlers#download",
    install = ["."],
    module = "github.com/gorilla/handlers",
    visibility = ["PUBLIC"],
    deps = [":github.com__felixge__httpsnoop"],
)

go_mod_download(
    name = "github.com__gorilla__mux",
    _tag = "download",
    module = "github.com/gorilla/mux",
    version = "v1.8.0",
)

go_module(
    name = "github.com__gorilla__mux",
    download = ":_github.com__gorilla__mux#download",
    install = ["."],
    module = "github.com/gorilla/mux",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gorilla__websocket",
    _tag = "download",
    module = "github.com/gorilla/websocket",
    version = "v1.4.2",
)

go_module(
    name = "github.com__gorilla__websocket",
    download = ":_github.com__gorilla__websocket#download",
    install = ["."],
    module = "github.com/gorilla/websocket",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__golang-lru",
    _tag = "download",
    module = "github.com/hashicorp/golang-lru",
    version = "v0.5.1",
)

go_module(
    name = "github.com__hashicorp__golang-lru",
    download = ":_github.com__hashicorp__golang-lru#download",
    install = ["."],
    module = "github.com/hashicorp/golang-lru",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__golang-lru__simplelru"],
)

go_module(
    name = "github.com__hashicorp__golang-lru__simplelru",
    download = ":_github.com__hashicorp__golang-lru#download",
    install = ["simplelru"],
    module = "github.com/hashicorp/golang-lru",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__mapstructure",
    _tag = "download",
    module = "github.com/mitchellh/mapstructure",
    version = "v1.1.2",
)

go_module(
    name = "github.com__mitchellh__mapstructure",
    download = ":_github.com__mitchellh__mapstructure#download",
    install = ["."],
    module = "github.com/mitchellh/mapstructure",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__moogar0880__problems",
    _tag = "download",
    module = "github.com/moogar0880/problems",
    version = "v0.1.1",
)

go_module(
    name = "github.com__moogar0880__problems",
    download = ":_github.com__moogar0880__problems#download",
    install = ["."],
    module = "github.com/moogar0880/problems",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__oklog__run",
    _tag = "download",
    module = "github.com/oklog/run",
    version = "v1.1.0",
)

go_module(
    name = "github.com__oklog__run",
    download = ":_github.com__oklog__run#download",
    install = ["."],
    module = "github.com/oklog/run",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__oklog__ulid",
    _tag = "download",
    module = "github.com/oklog/ulid",
    version = "v1.3.1",
)

go_module(
    name = "github.com__oklog__ulid",
    download = ":_github.com__oklog__ulid#download",
    install = ["."],
    module = "github.com/oklog/ulid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pkg__errors",
    _tag = "download",
    module = "github.com/pkg/errors",
    version = "v0.9.1",
)

go_module(
    name = "github.com__pkg__errors",
    download = ":_github.com__pkg__errors#download",
    install = ["."],
    module = "github.com/pkg/errors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pmezard__go-difflib",
    _tag = "download",
    module = "github.com/pmezard/go-difflib",
    version = "v1.0.0",
)

go_module(
    name = "github.com__pmezard__go-difflib__difflib",
    download = ":_github.com__pmezard__go-difflib#download",
    install = ["difflib"],
    module = "github.com/pmezard/go-difflib",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sagikazarmark__appkit",
    _tag = "download",
    module = "github.com/sagikazarmark/appkit",
    version = "v0.10.0",
)

go_module(
    name = "github.com__sagikazarmark__appkit__errors",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["errors"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__sagikazarmark__appkit__transport__grpc",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["transport/grpc"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__sagikazarmark__appkit__errors",
        ":google.golang.org__genproto__googleapis__rpc__errdetails",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__sagikazarmark__appkit__transport__http",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["transport/http"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__moogar0880__problems",
        ":github.com__sagikazarmark__appkit__errors",
    ],
)

go_mod_download(
    name = "github.com__sagikazarmark__kitx",
    _tag = "download",
    module = "github.com/sagikazarmark/kitx",
    version = "v0.14.0",
)

go_module(
    name = "github.com__sagikazarmark__kitx__endpoint",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["endpoint"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-kit__kit__endpoint"],
)

go_module(
    name = "github.com__sagikazarmark__kitx__transport__graphql",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["transport/graphql"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
        ":github.com__go-kit__kit__transport",
    ],
)

go_module(
    name = "github.com__sagikazarmark__kitx__transport__grpc",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["transport/grpc"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__transport__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__sagikazarmark__kitx__transport__http",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["transport/http"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__transport__http",
        ":github.com__moogar0880__problems",
        ":github.com__pkg__errors",
    ],
)

go_mod_download(
    name = "github.com__spf13__pflag",
    _tag = "download",
    module = "github.com/spf13/pflag",
    version = "v1.0.5",
)

go_module(
    name = "github.com__spf13__pflag",
    download = ":_github.com__spf13__pflag#download",
    install = ["."],
    module = "github.com/spf13/pflag",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__stretchr__testify",
    _tag = "download",
    module = "github.com/stretchr/testify",
    version = "v1.7.0",
)

go_module(
    name = "github.com__stretchr__testify__assert",
    download = ":_github.com__stretchr__testify#download",
    install = ["assert"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__pmezard__go-difflib__difflib",
        ":gopkg.in__yaml.v3",
    ],
)

go_module(
    name = "github.com__stretchr__testify__require",
    download = ":_github.com__stretchr__testify#download",
    install = ["require"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [":github.com__stretchr__testify__assert"],
)

go_mod_download(
    name = "github.com__vektah__gqlparser__v2",
    _tag = "download",
    module = "github.com/vektah/gqlparser/v2",
    version = "v2.1.0",
)

go_module(
    name = "github.com__vektah__gqlparser__v2",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["."],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
        ":github.com__vektah__gqlparser__v2__parser",
        ":github.com__vektah__gqlparser__v2__validator",
        ":github.com__vektah__gqlparser__v2__validator__rules",
    ],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__ast",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["ast"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__gqlerror",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["gqlerror"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__vektah__gqlparser__v2__ast"],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__lexer",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["lexer"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
    ],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__parser",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["parser"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
        ":github.com__vektah__gqlparser__v2__lexer",
    ],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__validator",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["validator"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__agnivade__levenshtein",
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__gqlerror",
        ":github.com__vektah__gqlparser__v2__parser",
    ],
)

go_module(
    name = "github.com__vektah__gqlparser__v2__validator__rules",
    download = ":_github.com__vektah__gqlparser__v2#download",
    install = ["validator/rules"],
    module = "github.com/vektah/gqlparser/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vektah__gqlparser__v2__ast",
        ":github.com__vektah__gqlparser__v2__validator",
    ],
)

go_mod_download(
    name = "go.uber.org__atomic",
    _tag = "download",
    module = "go.uber.org/atomic",
    version = "v1.7.0",
)

go_module(
    name = "go.uber.org__atomic",
    download = ":_go.uber.org__atomic#download",
    install = ["."],
    module = "go.uber.org/atomic",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.uber.org__multierr",
    _tag = "download",
    module = "go.uber.org/multierr",
    version = "v1.6.0",
)

go_module(
    name = "go.uber.org__multierr",
    download = ":_go.uber.org__multierr#download",
    install = ["."],
    module = "go.uber.org/multierr",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__atomic"],
)

go_mod_download(
    name = "golang.org__x__net",
    _tag = "download",
    module = "golang.org/x/net",
    version = "v0.0.0-20190813141303-74dc4d7220e7",
)

go_module(
    name = "golang.org__x__net__context__ctxhttp",
    download = ":_golang.org__x__net#download",
    install = ["context/ctxhttp"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__http__httpguts",
    download = ":_golang.org__x__net#download",
    install = ["http/httpguts"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__idna"],
)

go_module(
    name = "golang.org__x__net__http2",
    download = ":_golang.org__x__net#download",
    install = ["http2"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2__hpack",
        ":golang.org__x__net__http__httpguts",
        ":golang.org__x__net__idna",
    ],
)

go_module(
    name = "golang.org__x__net__http2__hpack",
    download = ":_golang.org__x__net#download",
    install = ["http2/hpack"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__idna",
    download = ":_golang.org__x__net#download",
    install = ["idna"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__secure__bidirule",
        ":golang.org__x__text__unicode__bidi",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__net__internal__timeseries",
    download = ":_golang.org__x__net#download",
    install = ["internal/timeseries"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__trace",
    download = ":_golang.org__x__net#download",
    install = ["trace"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__internal__timeseries"],
)

go_mod_download(
    name = "golang.org__x__oauth2",
    _tag = "download",
    module = "golang.org/x/oauth2",
    version = "v0.0.0-20200107190931-bf48bf16ab8d",
)

go_module(
    name = "golang.org__x__oauth2",
    download = ":_golang.org__x__oauth2#download",
    install = ["."],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__oauth2__internal"],
)

go_module(
    name = "golang.org__x__oauth2__internal",
    download = ":_golang.org__x__oauth2#download",
    install = ["internal"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__context__ctxhttp"],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.0.0-20200116001909-b77594299b42",
)

if is_platform(
    arch = ["amd64"],
    os = ["linux"],
):
    go_module(name = "golang.org__x__sys__unix", download = ":_golang.org__x__sys#download", install = ["unix"], module = "golang.org/x/sys", visibility = ["PUBLIC"], deps = [])

go_mod_download(
    name = "golang.org__x__text",
    _tag = "download",
    module = "golang.org/x/text",
    version = "v0.3.2",
)

go_module(
    name = "golang.org__x__text__secure__bidirule",
    download = ":_golang.org__x__text#download",
    install = ["secure/bidirule"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__bidi",
    ],
)

go_module(
    name = "golang.org__x__text__transform",
    download = ":_golang.org__x__text#download",
    install = ["transform"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__bidi",
    download = ":_golang.org__x__text#download",
    install = ["unicode/bidi"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__norm",
    download = ":_golang.org__x__text#download",
    install = ["unicode/norm"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_mod_download(
    name = "google.golang.org__genproto",
    _tag = "download",
    module = "google.golang.org/genproto",
    version = "v0.0.0-20200528191852-705c0b31589b",
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__errdetails",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/rpc/errdetails"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__duration",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__status",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/rpc/status"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_mod_download(
    name = "google.golang.org__grpc",
    _tag = "download",
    module = "google.golang.org/grpc",
    version = "v1.35.0",
)

go_module(
    name = "google.golang.org__grpc",
    download = ":_google.golang.org__grpc#download",
    install = ["."],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__trace",
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__balancer__roundrobin",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__encoding",
        ":google.golang.org__grpc__encoding__proto",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__balancerload",
        ":google.golang.org__grpc__internal__binarylog",
        ":google.golang.org__grpc__internal__buffer",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__grpcsync",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__resolver",
        ":google.golang.org__grpc__internal__resolver__dns",
        ":google.golang.org__grpc__internal__resolver__passthrough",
        ":google.golang.org__grpc__internal__resolver__unix",
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__internal__transport",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__attributes",
    download = ":_google.golang.org__grpc#download",
    install = ["attributes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__balancer",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__base",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/base"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__grpclb__state",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/grpclb/state"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__balancer__roundrobin",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/roundrobin"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__binarylog__grpc_binarylog_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["binarylog/grpc_binarylog_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__grpc__codes",
    download = ":_google.golang.org__grpc#download",
    install = ["codes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__connectivity",
    download = ":_google.golang.org__grpc#download",
    install = ["connectivity"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__credentials",
    ],
)

go_module(
    name = "google.golang.org__grpc__encoding",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__encoding__proto",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding/proto"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__encoding",
    ],
)

go_module(
    name = "google.golang.org__grpc__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__internal__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__balancerload",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/balancerload"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__internal__binarylog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/binarylog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__grpc__binarylog__grpc_binarylog_v1",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__buffer",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/buffer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__channelz",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/channelz"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__internal__envconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/envconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcrand",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcrand"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcsync",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcsync"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcutil",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcutil"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__serviceconfig",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__dns",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/dns"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer__grpclb__state",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__passthrough",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/passthrough"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__unix",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/unix"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__status",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__syscall",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/syscall"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__transport",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":golang.org__x__net__http2",
        ":golang.org__x__net__http2__hpack",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__grpcutil",
        ":google.golang.org__grpc__internal__metadata",
        ":google.golang.org__grpc__internal__syscall",
        ":google.golang.org__grpc__internal__transport__networktype",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__transport__networktype",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport/networktype"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__keepalive",
    download = ":_google.golang.org__grpc#download",
    install = ["keepalive"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__peer",
    download = ":_google.golang.org__grpc#download",
    install = ["peer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__status",
    download = ":_google.golang.org__grpc#download",
    install = ["status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__internal__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__tap",
    download = ":_google.golang.org__grpc#download",
    install = ["tap"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "google.golang.org__protobuf",
    _tag = "download",
    module = "google.golang.org/protobuf",
    version = "v1.25.0",
)

go_module(
    name = "google.golang.org__protobuf__encoding__prototext",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/prototext"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__mapsort",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__set",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protowire",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protowire"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__errors"],
)

go_module(
    name = "google.golang.org__protobuf__internal__descfmt",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descfmt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__descopts",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descopts"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__detrand",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/detrand"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__defval",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/defval"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__messageset",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/messageset"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__tag",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/tag"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__text",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/text"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__strs",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__errors",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/errors"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__detrand"],
)

go_module(
    name = "google.golang.org__protobuf__internal__fieldsort",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/fieldsort"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__filedesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filedesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descfmt",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__filetype",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filetype"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__flags",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/flags"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__genid",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/genid"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__impl",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/impl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__tag",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__fieldsort",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__mapsort",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/mapsort"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__pragma",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/pragma"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__set",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/set"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__strs",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/strs"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__version",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/version"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__proto",
    download = ":_google.golang.org__protobuf#download",
    install = ["proto"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__fieldsort",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__mapsort",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoreflect",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoreflect"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__pragma",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoregistry",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoregistry"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoiface",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoiface"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoimpl",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoimpl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__filetype",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__internal__version",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__anypb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/anypb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__durationpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/durationpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__timestamppb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/timestamppb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__wrapperspb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/wrapperspb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_mod_download(
    name = "gopkg.in__yaml.v3",
    _tag = "download",
    module = "gopkg.in/yaml.v3",
    version = "v3.0.0-20200313102051-9f266ea9e77c",
)

go_module(
    name = "gopkg.in__yaml.v3",
    download = ":_gopkg.in__yaml.v3#download",
    install = ["."],
    module = "gopkg.in/yaml.v3",
    visibility = ["PUBLIC"],
    deps = [],
)
